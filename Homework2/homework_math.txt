Find examples, don't prove anything.

1) Is that true that all odd squares ≡ 1 (mod 8)? 

That's true: 1^2 mod 8 = 1; 3^2 mod 8 = 1; 5^2 mod 8 = 1; 7^2 mod 8 = 1; ... 

2) What about even squares ≡ 1 (mod 8)?

That's false for even squares: 2^2 mod 8 = 4; 4^2 mod 8 = 0; 6^2 mod 8 = 4; 8^2 mod 8 = 0;

3) Tried the "Vanity-ETH" tool to generate the "0xeeee38aB6C19be6625D4B24E8dEaa100Fd792cdF" address adding to it the desired "eeee" prefix. Here's the private key: 05959794309acaca2827789793b0ca187774423f31def47b697cade953f692e5 (I won't use that ever).

4) What do you understand by:
 -) O(n) - complexity grows linearly with the input size;
 -) O(1) - complexity remains the same regardles the input size;
 -) O(log(n)) - complexity grows slowly with the input size;

 From what I remember: This called Big-O-Notation, which describes the time complexity for algorithms and explains "how much more time an operation time would increase with a harder computation". Hence, the "O(log(n))" refers to the fastest algorithms.

 According to the lesson 2 - These O(smth) describe the Complexity theory which refers to the time or space required to solve a problem in a worse case, usually, depending on the input size.

 -) For a proof size, which of these do you want?
 I'd like to pick O(1) OR O(log(n)) for a zkp size because the complexity (time and resources) wouldn't increase or increase slowly with the input accordingly. 